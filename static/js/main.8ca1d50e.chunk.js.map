{"version":3,"sources":["logo.svg","components/view/Filter.jsx","components/view/Input.jsx","components/view/tasks/Tasks.jsx","components/view/tasks/Task.jsx","redux/taskReducer.js","components/TodolistContainer.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js"],"names":["Filter","props","className","id","active","filter","onClick","changeFilter","style","opacity","clear","clearButton","Input","useState","input","setInput","color","toggleColor","type","value","toggleAll","onSubmit","e","preventDefault","submit","name","placeholder","onChange","target","Tasks","todos","Task","text","checkAction","checked","editing","autoFocus","onBlur","apply","onKeyUp","key","edit","onDoubleClick","deleteAction","initialState","localStorage","getItem","JSON","parse","todolist","active_count","filter_count","clear_completed_opacity","taskReducer","state","action","replace","trim","newId","length","inEdit","setItem","stringify","forEach","item","ind","index","splice","checkList","deleteItems","nonchecked","i","TodolistContainer","store","getState","tasks","check","dispatch","checkAC","changeTasks","deleteTodo","deleteTodoAC","editAC","applyEdit","applyEditAC","map","todo","setTodos","active__filter","addTodoAC","changeFilterAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ca1d50e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","let Filter = (props) =>{\r\n    return(\r\n        <div className=\"filter\" id=\"filter\">\r\n            <p id='active__count'>{props.active} items left</p>\r\n            <p className={props.filter === 1 ? 'filter__link active' : 'filter__link'} onClick={()=> props.changeFilter(1)} id='1'>All</p>\r\n            <p className={props.filter === 2 ? 'filter__link active' : 'filter__link'} onClick={()=> props.changeFilter(2)} id='2'>Active</p>\r\n            <p className={props.filter === 3 ? 'filter__link active' : 'filter__link'} onClick={()=> props.changeFilter(3)}  id='3'>Completed</p>\r\n            <p id=\"clear__completed\" style={{opacity: props.clear}} onClick={props.clearButton}>Clear completed</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\n\r\nlet Input = (props) =>{\r\n    const[input, setInput] = useState('');\r\n    const handleChange = e => setInput(e.target.value);\r\n\r\n    return(\r\n        <div className=\"form\">\r\n            <div className=\"toggle-all-button\">\r\n                <input style={{color: props.toggleColor}} type=\"button\" id=\"toggle-all\"  value=\"❯\" onClick={props.toggleAll}></input>\r\n            </div>\r\n            <form id=\"todo__form\" onSubmit={(e)=> {e.preventDefault(); props.submit(input); setInput('')}}>\r\n                <input type=\"text\" name=\"todo__text\" id=\"todo__text\" placeholder=\"What needs to be done?\" value={input} onChange={handleChange}></input>\r\n            </form>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","let Tasks = (props) =>{\r\n\r\n    return(\r\n        <ul id=\"todo__list\">\r\n            {props.todos}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from \"react\";\r\n\r\n\r\n\r\nlet Task = (props) =>{\r\n    const[input, setInput] = useState(props.text);\r\n    const handleChange = e => setInput(e.target.value);\r\n    return(\r\n        <li id={props.id} className ='items'>\r\n            <input type=\"checkbox\" className=\"checkbox\" onChange={()=>props.checkAction(props.id, props.checked)} checked={props.checked ? 'checked' : ''}></input>\r\n            {props.editing ? <input className=\"edit\" autoFocus onChange={handleChange} onBlur={()=>props.apply(props.id, input)} onKeyUp={(e)=>{if (e.key === 'Enter'){props.apply(props.id, input)}; if (e.key === \"Escape\"){props.edit(props.id); setInput(props.text)}}} value={input}></input> : <label className=\"label\" onDoubleClick={()=>props.edit(props.id)}>{props.text}</label>}\r\n            <button id='todo__remove' onClick={()=>props.deleteAction(props.id, props.checked)}>X</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Task;","let initialState = localStorage.getItem('todo') ? JSON.parse(localStorage.getItem('todo')) : {\r\n    todolist: [],\r\n    active_count: 0,\r\n    filter_count: 1,\r\n    clear_completed_opacity: true\r\n}\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"ADD-TODO\":\r\n            action.text.replace(/\\s+/g, \" \").trim();\r\n            if(!action.text || action.text === \" \") return state;\r\n            let newId\r\n            if(state.todolist.length === 0){\r\n                newId = 1\r\n            }\r\n            else{newId = state.todolist[state.todolist.length-1].id+1;}\r\n            state.active_count += 1\r\n            state.todolist = [...state.todolist, {id: newId, text: action.text, checked: false, inEdit: false}]\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{ ...state};\r\n        case \"CHECK\":\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    item.checked = !item.checked;\r\n                    item.checked ? state.active_count -= 1 : state.active_count += 1\r\n                }\r\n            }) \r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n\r\n            return{ ...state};\r\n        case \"DELETE-TODO\":\r\n            state.todolist.forEach((item, index)=>{\r\n                if (item.id === action.ind){\r\n                    if(!item.checked){\r\n                        state.active_count -= 1\r\n                    }\r\n                    state.todolist.splice(index, 1);\r\n                }\r\n            })\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state};\r\n        case \"CHANGE-FILTER\":\r\n            state.filter_count = action.ind\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state}\r\n        case \"CLEAR-COMPLETED\":\r\n            let checkList = () =>{\r\n                state.todolist.forEach((item)=>{\r\n                    if(item.checked){\r\n                        deleteItems();\r\n                    }\r\n                });\r\n            }\r\n            let deleteItems = () =>{\r\n                state.todolist.forEach((item, index)=>{\r\n                    if (item.checked)\r\n                    {\r\n                        state.todolist.splice(index, 1);\r\n                        checkList();\r\n                    }\r\n                });\r\n            }\r\n            checkList();\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state}\r\n        case \"TOGGLE-ALL\":\r\n            let nonchecked = 0;\r\n            state.todolist.forEach((item)=>{\r\n                if (!item.checked){\r\n                    nonchecked+=1;\r\n                }\r\n            });\r\n            if(nonchecked === 0){\r\n                state.active_count = state.todolist.length - nonchecked;\r\n                state.todolist.forEach((i)=>{\r\n                    i.checked = !i.checked;\r\n                });\r\n            }\r\n            else{\r\n                state.active_count = 0;\r\n                state.todolist.forEach((item)=>{\r\n                    if (!item.checked){\r\n                        item.checked = !item.checked;\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        case \"EDIT\":\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    item.inEdit = !item.inEdit;\r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        case \"APPLY-EDIT\":\r\n            action.text.replace(/\\s+/g, \" \").trim();\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    if(!action.text ){\r\n                        item.inEdit = false;\r\n                    }\r\n                    else{\r\n                        item.text = action.text;\r\n                        item.inEdit = false;\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport const addTodoAC = (text) =>({type: \"ADD-TODO\", text});\r\nexport const checkAC = (ind) =>({type: \"CHECK\", ind});\r\nexport const deleteTodoAC = (ind) =>({type: \"DELETE-TODO\", ind});\r\nexport const changeFilterAC = (ind) =>({type: \"CHANGE-FILTER\", ind});\r\nexport const clearCompleteAC = () =>({type: \"CLEAR-COMPLETED\"});\r\nexport const toggleAllAC = () =>({type: \"TOGGLE-ALL\"});\r\nexport const editAC = (ind) =>({type: \"EDIT\", ind});\r\nexport const applyEditAC = (ind, text) => ({type: \"APPLY-EDIT\", ind, text});\r\n\r\nexport default taskReducer;","import Filter from \"./view/Filter\";\r\nimport Input from './view/Input';\r\nimport React, { useState } from 'react';\r\nimport Tasks from './view/tasks/Tasks';\r\nimport Task from './view/tasks/Task';\r\nimport { addTodoAC, changeFilterAC, checkAC, deleteTodoAC, clearCompleteAC, toggleAllAC, editAC, applyEditAC } from './../redux/taskReducer';\r\n\r\n\r\n\r\nlet TodolistContainer = (props) =>{\r\n    let state = props.store.getState().tasks;\r\n\r\n    let check =(ind)=>{\r\n        props.store.dispatch(checkAC(ind));\r\n        changeTasks();\r\n    }\r\n    let deleteTodo = (ind) =>{\r\n        props.store.dispatch(deleteTodoAC(ind))\r\n        changeTasks();\r\n    }\r\n    let changeFilter = (ind) =>{\r\n        props.store.dispatch(changeFilterAC(ind))\r\n        changeTasks();\r\n    }\r\n    let clearButton = () =>{\r\n        props.store.dispatch(clearCompleteAC())\r\n        changeTasks();\r\n    }\r\n    let toggleAll = () =>{\r\n        props.store.dispatch(toggleAllAC())\r\n        changeTasks();\r\n    }\r\n    let edit = (ind) =>{\r\n        props.store.dispatch(editAC(ind))\r\n        changeTasks();\r\n    }\r\n    let applyEdit = (ind, text) =>{\r\n        props.store.dispatch(applyEditAC(ind, text))\r\n        changeTasks();\r\n    }\r\n\r\n    const [todos, setTodos] = useState(state.todolist.map( todo => <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} editing={todo.inEdit} checkAction = {check} deleteAction = {deleteTodo} edit={edit} apply={applyEdit}/>))\r\n    \r\n    let submitForm = (text) =>{\r\n        props.store.dispatch(addTodoAC(text));\r\n        changeTasks();\r\n    }\r\n\r\n\r\n\r\n    let changeTasks = () =>{\r\n        let active__filter = state.filter_count;\r\n        if(active__filter === 2){\r\n            setTodos(state.todolist.map( (todo) => {\r\n                if(todo.checked){\r\n                    <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} editing={todo.inEdit} checkAction = {check} deleteAction = {deleteTodo} edit={edit} apply={applyEdit}/>\r\n                }\r\n            }))\r\n        }\r\n        if(active__filter === 3){\r\n            setTodos(state.todolist.map( (todo) => {\r\n                if(!todo.checked){\r\n                    <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} editing={todo.inEdit} checkAction = {check} deleteAction = {deleteTodo} edit={edit} apply={applyEdit}/>\r\n                }\r\n            }))\r\n        }\r\n        else{ setTodos(state.todolist.map( todo => <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} editing={todo.inEdit} checkAction = {check} deleteAction = {deleteTodo} edit={edit} apply={applyEdit}/>)) }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <Input submit = {submitForm} toggleAll={toggleAll} toggleColor={state.active_count===0 & state.todolist.length > 0 ? '#26de81' : '#778ca3'}/>\r\n            <Tasks todos={todos}/>\r\n            <Filter active = {state.active_count} filter = {state.filter_count} changeFilter = {changeFilter} clear={state.todolist.length !== state.active_count ? 1 : 0} clearButton={clearButton}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TodolistContainer;","import logo from './logo.svg';\nimport './App.css';\nimport TodolistContainer from './components/TodolistContainer';\n\nlet App = (props) => {\n  return(\n    <div className = 'Wrapper'>\n      <TodolistContainer store = {props.store}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers} from \"redux\";\r\nimport taskReducer from './taskReducer';\r\n\r\nlet reducers = combineReducers({\r\n    tasks:taskReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store = {store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}