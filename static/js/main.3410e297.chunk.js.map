{"version":3,"sources":["components/Filter/Filter.module.scss","components/Filter/Filter.jsx","components/Input/Input.jsx","redux/taskReducer.js","redux/selectors.js","components/view/Task/Task.jsx","components/view/Tasks/Tasks.jsx","components/TodolistContainer.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","components/view/Tasks.module.scss","components/Input/Input.module.scss"],"names":["module","exports","Filter","props","handleChangeFilter","e","onChangeFilter","target","dataset","filter","className","s","id","active__count","active","filter__link","onClick","clear__completed","style","opacity","clear","clearButton","Input","useState","input","setInput","form","toggleAllButton","color","toggleColor","type","toggleAll","value","onToggleAll","todo__form","onSubmit","preventDefault","name","todo__text","placeholder","onChange","initialState","localStorage","getItem","JSON","parse","todolist","active_count","filter_count","clear_completed_opacity","taskSlice","createSlice","reducers","ADD_TODO","state","action","newId","payload","replace","trim","length","text","checked","inEdit","setItem","stringify","CHECK","forEach","item","DELETE_TODO","index","splice","CHANGE_FILTER","CLEAR_COMPLETED","checkList","deleteItems","TOGGLE_ALL","nonchecked","i","EDIT","APPLY_EDIT","ind","actions","tasksSelector","tasks","filterSelector","activeSelector","secondFilter","createSelector","items","todo","thirdFilter","Task","checkbox","onCheckAction","edit","autoFocus","onBlur","onApply","onKeyUp","key","onEdit","label","onDoubleClick","todo__remove","onDelete","React","memo","Tasks","todo__list","todos","map","onApplyEdit","TodolistContainer","dispatch","useDispatch","useSelector","sec_filt","thr_filt","handleCheck","useCallback","handleDeleteTodo","handleClearButton","handleToggleAll","handleEdit","handleApplyEdit","handleSubmitForm","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","taskReducer","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3410e297.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__MVJot\",\"active__count\":\"Filter_active__count__1-Zqs\",\"filter__link\":\"Filter_filter__link__2MIVW\",\"active\":\"Filter_active__2fpT6\",\"items\":\"Filter_items__2EuqG\",\"clear__completed\":\"Filter_clear__completed__2S7_9\"};","import s from './Filter.module.scss';\r\n\r\n\r\nlet Filter = (props) =>{\r\n    let handleChangeFilter = (e) =>{\r\n        props.onChangeFilter(e.target.dataset.filter)\r\n    }\r\n    return(\r\n        <div className={s.filter}>\r\n            <p id={s.active__count}>{props.active} items left</p>\r\n            <p className={`${s.filter__link} ${props.filter === 'All' ?  s.active : ''}`} data-filter='All' onClick={handleChangeFilter}>All</p>\r\n            <p className={`${s.filter__link} ${props.filter === 'Active' ?  s.active : ''}`} data-filter='Active' onClick={handleChangeFilter}>Active</p>\r\n            <p className={`${s.filter__link} ${props.filter === 'Completed' ?  s.active : ''}`} data-filter='Completed' onClick={handleChangeFilter}>Completed</p>\r\n            <p id={s.clear__completed} style={{opacity: props.clear}} onClick={props.clearButton}>Clear completed</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\nimport s from './Input.module.scss';\r\n\r\nlet Input = (props) =>{\r\n    const[input, setInput] = useState('');\r\n    const handleChange = e => setInput(e.target.value);\r\n    let onSubmitForm = (e) =>{\r\n        e.preventDefault(); \r\n        props.onSubmit(input); \r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <div className={s.form}>\r\n            <div className={s.toggleAllButton}>\r\n                <input style={{color: props.toggleColor}} type=\"button\" id={s.toggleAll}  value=\"❯\" onClick={props.onToggleAll}></input>\r\n            </div>\r\n            <form id={s.todo__form} onSubmit={onSubmitForm}>\r\n                <input type=\"text\" name=\"todo__text\" id={s.todo__text} placeholder=\"What needs to be done?\" value={input} onChange={handleChange}></input>\r\n            </form>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = localStorage.getItem('todo') ? JSON.parse(localStorage.getItem('todo')) : {\r\n    todolist: [],\r\n    active_count: 0,\r\n    filter_count: 'All',\r\n    clear_completed_opacity: true\r\n}\r\n\r\nconst taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        ADD_TODO: (state, action) => {\r\n            action.payload.replace(/\\s+/g, \" \").trim();\r\n            if(!action.payload || action.payload === \" \") return;\r\n            let newId\r\n            if(state.todolist.length === 0){\r\n                newId = 1\r\n            }\r\n            else{newId = state.todolist[state.todolist.length-1].id+1;}\r\n            state.active_count += 1\r\n            state.todolist = [...state.todolist, {id: newId, text: action.payload, checked: false, inEdit: false}]\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CHECK(state, action){\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload){\r\n                    item.checked = !item.checked;\r\n                    item.checked ? state.active_count -= 1 : state.active_count += 1\r\n                }\r\n            }) \r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        DELETE_TODO(state, action){\r\n            state.todolist.forEach((item, index)=>{\r\n                if (item.id === action.payload){\r\n                    if(!item.checked){\r\n                        state.active_count -= 1\r\n                    }\r\n                    state.todolist.splice(index, 1);\r\n                }\r\n            })\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CHANGE_FILTER: (state, action) => {\r\n            state.filter_count = action.payload\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CLEAR_COMPLETED(state){\r\n            let checkList = () =>{\r\n                state.todolist.forEach((item)=>{\r\n                    if(item.checked){\r\n                        deleteItems();\r\n                    }\r\n                });\r\n            }\r\n            let deleteItems = () =>{\r\n                state.todolist.forEach((item, index)=>{\r\n                    if (item.checked)\r\n                    {\r\n                        state.todolist.splice(index, 1);\r\n                        checkList();\r\n                    }\r\n                });\r\n            }\r\n            checkList();\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        TOGGLE_ALL(state){\r\n            let nonchecked = 0;\r\n            state.todolist.forEach((item)=>{\r\n                if (!item.checked){\r\n                    nonchecked+=1;\r\n                }\r\n            });\r\n            if(nonchecked === 0){\r\n                state.active_count = state.todolist.length - nonchecked;\r\n                state.todolist.forEach((i)=>{\r\n                    i.checked = !i.checked;\r\n                });\r\n            }\r\n            else{\r\n                state.active_count = 0;\r\n                state.todolist.forEach((item)=>{\r\n                    if (!item.checked){\r\n                        item.checked = !item.checked;\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        EDIT(state, action){\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload){\r\n                    item.inEdit = !item.inEdit;\r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        APPLY_EDIT(state, action){\r\n            action.payload.text.replace(/\\s+/g, \" \").trim();\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload.ind){\r\n                    if(!action.payload.text ){\r\n                        item.inEdit = false;\r\n                    }\r\n                    else{\r\n                        item.text = action.payload.text;\r\n                        item.inEdit = false;\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n    },\r\n})\r\n\r\nexport const {ADD_TODO, CHECK, DELETE_TODO, CHANGE_FILTER, CLEAR_COMPLETED, TOGGLE_ALL, EDIT, APPLY_EDIT} = taskSlice.actions\r\n\r\nexport default taskSlice.reducer","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const tasksSelector = state => state.tasks.todolist;\r\nexport const filterSelector = state => state.tasks.filter_count;\r\nexport const activeSelector = state => state.tasks.active_count;\r\nexport const secondFilter = createSelector(\r\n    tasksSelector,\r\n    items => items.filter(todo => !todo.checked)\r\n);\r\nexport const thirdFilter = createSelector(\r\n    tasksSelector,\r\n    items => items.filter(todo => todo.checked)\r\n);","import { useState } from \"react\";\r\nimport s from '../Tasks.module.scss'\r\nimport React from 'react';\r\n\r\n\r\nlet Task = (props) =>{\r\n    let handleApply = e =>{\r\n        if (e.key === 'Enter'){\r\n            props.onApply(props.id, input)\r\n        }\r\n        else if (e.key === \"Escape\"){\r\n            props.onEdit(props.id); setInput(props.text)\r\n        }\r\n    }\r\n    let handleCheck = () =>{\r\n        props.onCheckAction(props.id, props.checked)\r\n    }\r\n    let handleDelete = () =>{\r\n        props.onDelete(props.id, props.checked)\r\n    }\r\n    let handleEdit = () =>{\r\n        props.onEdit(props.id)\r\n    }\r\n    let handleSecApply = () =>{\r\n        props.onApply(props.id, input)\r\n    }\r\n\r\n\r\n    const[input, setInput] = useState(props.text);\r\n    const handleChange = e => setInput(e.target.value);\r\n    return(\r\n        <li id={props.id} className ={s.items}>\r\n            <input type=\"checkbox\" className={s.checkbox} onChange={handleCheck} checked={props.checked ? 'checked' : ''}></input>\r\n            {props.inEdit ? <input className={s.edit} autoFocus onChange={handleChange} onBlur={handleSecApply} onKeyUp={handleApply} value={input}></input> : <label className={s.label} onDoubleClick={handleEdit}>{props.text}</label>}\r\n            <button id={s.todo__remove} onClick={handleDelete}>X</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default React.memo(Task);","import Task from '../Task';\r\nimport React from 'react';\r\nimport s from '../Tasks.module.scss'\r\n\r\nlet Tasks = (props) =>{\r\n    return(\r\n        <ul id={s.todo__list}>\r\n            {props.todos.map(todo=> <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} inEdit={todo.inEdit} onDelete={props.onDelete} onCheckAction={props.onCheckAction} onApply={props.onApplyEdit} onEdit={props.onEdit}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import React, {useCallback} from 'react';\r\nimport Filter from \"./Filter\";\r\nimport Input from './Input';\r\nimport { CHECK, DELETE_TODO, CHANGE_FILTER, CLEAR_COMPLETED, TOGGLE_ALL, EDIT, APPLY_EDIT, ADD_TODO } from './../redux/taskReducer';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterSelector, tasksSelector, activeSelector, secondFilter, thirdFilter } from './../redux/selectors';\r\nimport Tasks from './view/Tasks';\r\n\r\n\r\nlet TodolistContainer = () =>{\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(tasksSelector);\r\n    const sec_filt = useSelector(secondFilter);\r\n    const thr_filt = useSelector(thirdFilter);\r\n    const filter_count = useSelector(filterSelector);\r\n    const active_count = useSelector(activeSelector);\r\n    let todos = {\r\n        'All': tasks,\r\n        'Active': sec_filt,\r\n        'Completed': thr_filt\r\n    }\r\n    let handleCheck = useCallback(\r\n        (ind) =>{\r\n            dispatch(CHECK(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleDeleteTodo = useCallback(\r\n        (ind) =>{\r\n            dispatch(DELETE_TODO(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleChangeFilter = useCallback(\r\n        (ind) =>{\r\n            dispatch(CHANGE_FILTER(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleClearButton = useCallback(\r\n        (ind) =>{\r\n            dispatch(CLEAR_COMPLETED(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleToggleAll = useCallback(\r\n        (ind) =>{\r\n            dispatch(TOGGLE_ALL(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleEdit = useCallback(\r\n        (ind) =>{\r\n            dispatch(EDIT(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleApplyEdit = useCallback(\r\n        (ind, text) =>{\r\n            dispatch(APPLY_EDIT({ind: ind, text: text }));\r\n        }, [dispatch],\r\n    )\r\n    let handleSubmitForm = useCallback(\r\n        (text) =>{\r\n            console.log('callback done');\r\n            dispatch(ADD_TODO(text));\r\n        }, [dispatch],\r\n    )\r\n     \r\n\r\n    console.log(filter_count);\r\n    return(\r\n        <div className=\"container\">\r\n            <Input onSubmit = {handleSubmitForm} onToggleAll={handleToggleAll} toggleColor={active_count===0 & tasks.length > 0 ? '#26de81' : '#778ca3'}/>\r\n            <Tasks todos={todos[filter_count]} onCheckAction={handleCheck} onDelete = {handleDeleteTodo} onEdit={handleEdit} onApplyEdit={handleApplyEdit}/>\r\n            <Filter active = {active_count} filter = {filter_count} onChangeFilter = {handleChangeFilter} clear={tasks.length !== active_count ? 1 : 0} clearButton={handleClearButton}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TodolistContainer;","import './App.scss';\nimport TodolistContainer from './components/TodolistContainer';\n\nlet App = () => {\n  return(\n    <div className = 'Wrapper'>\n      <TodolistContainer/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers} from \"redux\";\r\nimport taskReducer from './taskReducer';\r\n\r\nlet reducers = combineReducers({\r\n    tasks:taskReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__list\":\"Tasks_todo__list__2NEui\",\"edit\":\"Tasks_edit__2mDhk\",\"todo__remove\":\"Tasks_todo__remove__2vSem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__1J0kp\",\"todo__form\":\"Input_todo__form__1Rk43\",\"toggleAllButton\":\"Input_toggleAllButton__3JToJ\",\"toggleAll\":\"Input_toggleAll__8ruas\",\"todo__text\":\"Input_todo__text__3yApV\",\"edit\":\"Input_edit__4B9un\"};"],"sourceRoot":""}