{"version":3,"sources":["components/Filter/Filter.module.scss","components/Filter/Filter.jsx","components/Input/Input.jsx","components/view/Task/Task.jsx","components/view/Tasks/Tasks.jsx","redux/taskReducer.js","redux/selectors.js","components/TodolistContainer.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","components/view/Tasks.module.scss","components/Input/Input.module.scss"],"names":["module","exports","Filter","props","handleChangeFilter","e","onChangeFilter","Number","target","dataset","filter","className","s","id","active__count","active","filter__link","onClick","clear__completed","style","opacity","clear","clearButton","Input","useState","input","setInput","form","toggleAllButton","color","toggleColor","type","toggleAll","value","onToggleAll","todo__form","onSubmit","preventDefault","name","todo__text","placeholder","onChange","Task","text","items","checkbox","onCheckAction","checked","inEdit","edit","autoFocus","onBlur","onApply","onKeyUp","key","onEdit","label","onDoubleClick","todo__remove","onDelete","React","memo","Tasks","todo__list","todos","map","todo","onApplyEdit","initialState","localStorage","getItem","JSON","parse","todolist","active_count","filter_count","clear_completed_opacity","taskSlice","createSlice","reducers","ADD_TODO","state","action","newId","payload","replace","trim","length","setItem","stringify","CHECK","forEach","item","DELETE_TODO","index","splice","CHANGE_FILTER","CLEAR_COMPLETED","checkList","deleteItems","TOGGLE_ALL","nonchecked","i","EDIT","APPLY_EDIT","ind","actions","tasksSelector","tasks","filterSelector","activeSelector","secondFilter","createSelector","thirdFilter","TodolistContainer","dispatch","useDispatch","useSelector","sec_filt","thr_filt","handleCheck","useCallback","handleDeleteTodo","handleClearButton","handleToggleAll","handleEdit","handleApplyEdit","handleSubmitForm","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","taskReducer","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c951570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__DkSXW\",\"active__count\":\"Filter_active__count__B2K_b\",\"filter__link\":\"Filter_filter__link__-1fWn\",\"active\":\"Filter_active__2MsDC\",\"items\":\"Filter_items__35w_K\",\"clear__completed\":\"Filter_clear__completed__1vx7O\"};","import s from './Filter.module.scss';\r\n\r\n\r\nlet Filter = (props) =>{\r\n    let handleChangeFilter = (e) =>{\r\n        props.onChangeFilter(Number(e.target.dataset.filter))\r\n    }\r\n    return(\r\n        <div className={s.filter}>\r\n            <p id={s.active__count}>{props.active} items left</p>\r\n            <p className={`${s.filter__link} ${props.filter === 1 ?  s.active : ''}`} data-filter='1' onClick={handleChangeFilter}>All</p>\r\n            <p className={`${s.filter__link} ${props.filter === 2 ?  s.active : ''}`} data-filter='2' onClick={handleChangeFilter}>Active</p>\r\n            <p className={`${s.filter__link} ${props.filter === 3 ?  s.active : ''}`} data-filter='3' onClick={handleChangeFilter}>Completed</p>\r\n            <p id={s.clear__completed} style={{opacity: props.clear}} onClick={props.clearButton}>Clear completed</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\nimport s from './Input.module.scss';\r\n\r\nlet Input = (props) =>{\r\n    const[input, setInput] = useState('');\r\n    const handleChange = e => setInput(e.target.value);\r\n    let onSubmitForm = (e) =>{\r\n        e.preventDefault(); \r\n        props.onSubmit(input); \r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <div className={s.form}>\r\n            <div className={s.toggleAllButton}>\r\n                <input style={{color: props.toggleColor}} type=\"button\" id={s.toggleAll}  value=\"❯\" onClick={props.onToggleAll}></input>\r\n            </div>\r\n            <form id={s.todo__form} onSubmit={onSubmitForm}>\r\n                <input type=\"text\" name=\"todo__text\" id={s.todo__text} placeholder=\"What needs to be done?\" value={input} onChange={handleChange}></input>\r\n            </form>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from \"react\";\r\nimport s from '../Tasks.module.scss'\r\nimport React from 'react';\r\n\r\n\r\nlet Task = (props) =>{\r\n    let handleApply = e =>{\r\n        if (e.key === 'Enter'){\r\n            props.onApply(props.id, input)\r\n        }\r\n        else if (e.key === \"Escape\"){\r\n            props.onEdit(props.id); setInput(props.text)\r\n        }\r\n    }\r\n    let handleCheck = () =>{\r\n        props.onCheckAction(props.id, props.checked)\r\n    }\r\n    let handleDelete = () =>{\r\n        props.onDelete(props.id, props.checked)\r\n    }\r\n    let handleEdit = () =>{\r\n        props.onEdit(props.id)\r\n    }\r\n    let handleSecApply = () =>{\r\n        props.onApply(props.id, input)\r\n    }\r\n\r\n\r\n    const[input, setInput] = useState(props.text);\r\n    const handleChange = e => setInput(e.target.value);\r\n    return(\r\n        <li id={props.id} className ={s.items}>\r\n            <input type=\"checkbox\" className={s.checkbox} onChange={handleCheck} checked={props.checked ? 'checked' : ''}></input>\r\n            {props.inEdit ? <input className={s.edit} autoFocus onChange={handleChange} onBlur={handleSecApply} onKeyUp={handleApply} value={input}></input> : <label className={s.label} onDoubleClick={handleEdit}>{props.text}</label>}\r\n            <button id={s.todo__remove} onClick={handleDelete}>X</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default React.memo(Task);","import Task from '../Task';\r\nimport React from 'react';\r\nimport s from '../Tasks.module.scss'\r\n\r\nlet Tasks = (props) =>{\r\n    return(\r\n        <ul id={s.todo__list}>\r\n            {props.todos.map(todo=> <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} inEdit={todo.inEdit} onDelete={props.onDelete} onCheckAction={props.onCheckAction} onApply={props.onApplyEdit} onEdit={props.onEdit}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = localStorage.getItem('todo') ? JSON.parse(localStorage.getItem('todo')) : {\r\n    todolist: [],\r\n    active_count: 0,\r\n    filter_count: 1,\r\n    clear_completed_opacity: true\r\n}\r\n\r\nconst taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        ADD_TODO: (state, action) => {\r\n            action.payload.replace(/\\s+/g, \" \").trim();\r\n            if(!action.payload || action.payload === \" \") return;\r\n            let newId\r\n            if(state.todolist.length === 0){\r\n                newId = 1\r\n            }\r\n            else{newId = state.todolist[state.todolist.length-1].id+1;}\r\n            state.active_count += 1\r\n            state.todolist = [...state.todolist, {id: newId, text: action.payload, checked: false, inEdit: false}]\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CHECK(state, action){\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload){\r\n                    item.checked = !item.checked;\r\n                    item.checked ? state.active_count -= 1 : state.active_count += 1\r\n                }\r\n            }) \r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        DELETE_TODO(state, action){\r\n            state.todolist.forEach((item, index)=>{\r\n                if (item.id === action.payload){\r\n                    if(!item.checked){\r\n                        state.active_count -= 1\r\n                    }\r\n                    state.todolist.splice(index, 1);\r\n                }\r\n            })\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CHANGE_FILTER: (state, action) => {\r\n            state.filter_count = action.payload\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        CLEAR_COMPLETED(state){\r\n            let checkList = () =>{\r\n                state.todolist.forEach((item)=>{\r\n                    if(item.checked){\r\n                        deleteItems();\r\n                    }\r\n                });\r\n            }\r\n            let deleteItems = () =>{\r\n                state.todolist.forEach((item, index)=>{\r\n                    if (item.checked)\r\n                    {\r\n                        state.todolist.splice(index, 1);\r\n                        checkList();\r\n                    }\r\n                });\r\n            }\r\n            checkList();\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        TOGGLE_ALL(state){\r\n            let nonchecked = 0;\r\n            state.todolist.forEach((item)=>{\r\n                if (!item.checked){\r\n                    nonchecked+=1;\r\n                }\r\n            });\r\n            if(nonchecked === 0){\r\n                state.active_count = state.todolist.length - nonchecked;\r\n                state.todolist.forEach((i)=>{\r\n                    i.checked = !i.checked;\r\n                });\r\n            }\r\n            else{\r\n                state.active_count = 0;\r\n                state.todolist.forEach((item)=>{\r\n                    if (!item.checked){\r\n                        item.checked = !item.checked;\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        EDIT(state, action){\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload){\r\n                    item.inEdit = !item.inEdit;\r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n        APPLY_EDIT(state, action){\r\n            action.payload.text.replace(/\\s+/g, \" \").trim();\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.payload.ind){\r\n                    if(!action.payload.text ){\r\n                        item.inEdit = false;\r\n                    }\r\n                    else{\r\n                        item.text = action.payload.text;\r\n                        item.inEdit = false;\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n        },\r\n    },\r\n})\r\n\r\nexport const {ADD_TODO, CHECK, DELETE_TODO, CHANGE_FILTER, CLEAR_COMPLETED, TOGGLE_ALL, EDIT, APPLY_EDIT} = taskSlice.actions\r\n\r\nexport default taskSlice.reducer","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const tasksSelector = state => state.tasks.todolist;\r\nexport const filterSelector = state => state.tasks.filter_count;\r\nexport const activeSelector = state => state.tasks.active_count;\r\nexport const secondFilter = createSelector(\r\n    tasksSelector,\r\n    items => items.filter(todo => !todo.checked)\r\n);\r\nexport const thirdFilter = createSelector(\r\n    tasksSelector,\r\n    items => items.filter(todo => todo.checked)\r\n);","import React, {useCallback} from 'react';\r\nimport Filter from \"./Filter\";\r\nimport Input from './Input';\r\nimport Tasks from './view/Tasks/Tasks';\r\nimport { CHECK, DELETE_TODO, CHANGE_FILTER, CLEAR_COMPLETED, TOGGLE_ALL, EDIT, APPLY_EDIT, ADD_TODO } from './../redux/taskReducer';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterSelector, tasksSelector, activeSelector, secondFilter, thirdFilter } from './../redux/selectors';\r\n\r\n\r\nlet TodolistContainer = () =>{\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector(tasksSelector);\r\n    const sec_filt = useSelector(secondFilter);\r\n    const thr_filt = useSelector(thirdFilter);\r\n    const filter_count = useSelector(filterSelector);\r\n    const active_count = useSelector(activeSelector);\r\n    let handleCheck = useCallback(\r\n        (ind) =>{\r\n            dispatch(CHECK(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleDeleteTodo = useCallback(\r\n        (ind) =>{\r\n            dispatch(DELETE_TODO(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleChangeFilter = useCallback(\r\n        (ind) =>{\r\n            dispatch(CHANGE_FILTER(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleClearButton = useCallback(\r\n        (ind) =>{\r\n            dispatch(CLEAR_COMPLETED(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleToggleAll = useCallback(\r\n        (ind) =>{\r\n            dispatch(TOGGLE_ALL(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleEdit = useCallback(\r\n        (ind) =>{\r\n            dispatch(EDIT(ind));\r\n        }, [dispatch],\r\n    )\r\n    let handleApplyEdit = useCallback(\r\n        (ind, text) =>{\r\n            dispatch(APPLY_EDIT({ind: ind, text: text }));\r\n        }, [dispatch],\r\n    )\r\n    let handleSubmitForm = useCallback(\r\n        (text) =>{\r\n            console.log('callback done');\r\n            dispatch(ADD_TODO(text));\r\n        }, [dispatch],\r\n    )\r\n    let todos;\r\n    if(filter_count === 2){\r\n        todos = sec_filt;\r\n    }\r\n    else if(filter_count === 3){\r\n        todos = thr_filt;\r\n    }\r\n    else{ \r\n        todos = tasks;\r\n     }\r\n     \r\n\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <Input onSubmit = {handleSubmitForm} onToggleAll={handleToggleAll} toggleColor={active_count===0 & tasks.length > 0 ? '#26de81' : '#778ca3'}/>\r\n            <Tasks todos={todos} onCheckAction={handleCheck} onDelete = {handleDeleteTodo} onEdit={handleEdit} onApplyEdit={handleApplyEdit}/>\r\n            <Filter active = {active_count} filter = {filter_count} onChangeFilter = {handleChangeFilter} clear={tasks.length !== active_count ? 1 : 0} clearButton={handleClearButton}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TodolistContainer;","import './App.scss';\nimport TodolistContainer from './components/TodolistContainer';\n\nlet App = () => {\n  return(\n    <div className = 'Wrapper'>\n      <TodolistContainer/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers} from \"redux\";\r\nimport taskReducer from './taskReducer';\r\n\r\nlet reducers = combineReducers({\r\n    tasks:taskReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__list\":\"Tasks_todo__list__3t2ag\",\"edit\":\"Tasks_edit__1KhYE\",\"todo__remove\":\"Tasks_todo__remove__-yMMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__H-EL0\",\"todo__form\":\"Input_todo__form__3-HCO\",\"toggleAllButton\":\"Input_toggleAllButton__IPecA\",\"toggleAll\":\"Input_toggleAll__1D1cZ\",\"todo__text\":\"Input_todo__text__1jw4z\",\"edit\":\"Input_edit__k9iMc\"};"],"sourceRoot":""}