{"version":3,"sources":["components/view/Filter.module.scss","components/view/Filter.jsx","components/view/Input.jsx","components/view/tasks/Task.jsx","components/view/tasks/Tasks.jsx","redux/taskReducer.js","components/TodolistContainer.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","components/view/tasks/Tasks.module.scss","components/view/Input.module.scss"],"names":["module","exports","Filter","props","className","s","filter","id","active__count","active","filter__link","onClick","changeFilter","clear__completed","style","opacity","clear","clearButton","Input","useState","input","setInput","form","toggleAllButton","color","toggleColor","type","toggleAll","value","onToggleAll","todo__form","onSubmit","e","preventDefault","name","todo__text","placeholder","onChange","target","Task","text","items","checkbox","onCheckAction","checked","inEdit","edit","autoFocus","onBlur","onApply","onKeyUp","key","onEdit","label","onDoubleClick","todo__remove","onDelete","Tasks","todo__list","todos","map","todo","onApplyEdit","ADD_TODO","CHECK","DELETE_TODO","CHANGE_FILTER","CLEAR_COMPLETED","TOGGLE_ALL","EDIT","APPLY_EDIT","initialState","localStorage","getItem","JSON","parse","todolist","active_count","filter_count","clear_completed_opacity","taskReducer","state","action","replace","trim","newId","length","setItem","stringify","forEach","item","ind","index","splice","checkList","deleteItems","nonchecked","i","TodolistContainer","useSelector","tasks","dispatch","useDispatch","push","addTodoAC","checkAC","deleteTodoAC","editAC","applyEditAC","changeFilterAC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,aAAe,6BAA6B,OAAS,uBAAuB,MAAQ,sBAAsB,iBAAmB,mC,0JCc9MC,EAZF,SAACC,GACV,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,oBAAGC,GAAIF,IAAEG,cAAT,UAAyBL,EAAMM,OAA/B,iBACA,mBAAGL,UAAS,UAAKC,IAAEK,aAAP,YAAwC,IAAjBP,EAAMG,OAAgBD,IAAEI,OAAS,IAAME,QAAS,kBAAKR,EAAMS,aAAa,IAA3G,iBACA,mBAAGR,UAAS,UAAKC,IAAEK,aAAP,YAAwC,IAAjBP,EAAMG,OAAgBD,IAAEI,OAAS,IAAME,QAAS,kBAAKR,EAAMS,aAAa,IAA3G,oBACA,mBAAGR,UAAS,UAAKC,IAAEK,aAAP,YAAwC,IAAjBP,EAAMG,OAAgBD,IAAEI,OAAS,IAAME,QAAS,kBAAKR,EAAMS,aAAa,IAA3G,uBACA,mBAAGL,GAAIF,IAAEQ,iBAAkBC,MAAO,CAACC,QAASZ,EAAMa,OAAQL,QAASR,EAAMc,YAAzE,iC,wBCcGC,EArBH,SAACf,GACT,MAAyBgB,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KAQA,OACI,sBAAKjB,UAAWC,IAAEiB,KAAlB,UACI,qBAAKlB,UAAWC,IAAEkB,gBAAlB,SACI,uBAAOT,MAAO,CAACU,MAAOrB,EAAMsB,aAAcC,KAAK,SAASnB,GAAIF,IAAEsB,UAAYC,MAAM,SAAIjB,QAASR,EAAM0B,gBAEvG,sBAAMtB,GAAIF,IAAEyB,WAAYC,SAXb,SAACC,GAChBA,EAAEC,iBACF9B,EAAM4B,SAASX,GACfC,EAAS,KAQL,SACI,uBAAOK,KAAK,OAAOQ,KAAK,aAAa3B,GAAIF,IAAE8B,WAAYC,YAAY,yBAAyBR,MAAOR,EAAOiB,SAbjG,SAAAL,GAAC,OAAIX,EAASW,EAAEM,OAAOV,gB,gBCiCjCW,EAlCJ,SAACpC,GACR,IAsBA,EAAyBgB,mBAAShB,EAAMqC,MAAxC,mBAAMpB,EAAN,KAAaC,EAAb,KAEA,OACI,qBAAId,GAAIJ,EAAMI,GAAIH,UAAYC,IAAEoC,MAAhC,UACI,uBAAOf,KAAK,WAAWtB,UAAWC,IAAEqC,SAAUL,SAlBpC,WACdlC,EAAMwC,cAAcxC,EAAMI,GAAIJ,EAAMyC,UAiBqCA,QAASzC,EAAMyC,QAAU,UAAY,KACzGzC,EAAM0C,OAAS,uBAAOzC,UAAWC,IAAEyC,KAAMC,WAAS,EAACV,SAJvC,SAAAL,GAAC,OAAIX,EAASW,EAAEM,OAAOV,QAIwCoB,OAV/D,WACjB7C,EAAM8C,QAAQ9C,EAAMI,GAAIa,IASgF8B,QA3B1F,SAAAlB,GACA,UAAVA,EAAEmB,IACFhD,EAAM8C,QAAQ9C,EAAMI,GAAIa,GAET,WAAVY,EAAEmB,MACPhD,EAAMiD,OAAOjD,EAAMI,IAAKc,EAASlB,EAAMqC,QAsBmFZ,MAAOR,IAAkB,uBAAOhB,UAAWC,IAAEgD,MAAOC,cAbrK,WACbnD,EAAMiD,OAAOjD,EAAMI,KAYoI,SAAuDJ,EAAMqC,OAChN,wBAAQjC,GAAIF,IAAEkD,aAAc5C,QAjBjB,WACfR,EAAMqD,SAASrD,EAAMI,GAAIJ,EAAMyC,UAgB3B,mBCtBGa,EARH,SAACtD,GACT,OACI,oBAAII,GAAIF,IAAEqD,WAAV,SACKvD,EAAMwD,MAAMC,KAAI,SAAAC,GAAI,OAAG,cAAC,EAAD,CAAoBtD,GAAIsD,EAAKtD,GAAIiC,KAAMqB,EAAKrB,KAAMI,QAASiB,EAAKjB,QAASC,OAAQgB,EAAKhB,OAAQW,SAAUrD,EAAMqD,SAAUb,cAAexC,EAAMwC,cAAeM,QAAS9C,EAAM2D,YAAaV,OAAQjD,EAAMiD,QAA3LS,EAAKtD,U,eCN9CwD,EAAW,WACXC,EAAQ,QACRC,EAAc,cACdC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAa,aACbC,EAAO,OACPC,EAAa,aAIfC,EAAeC,aAAaC,QAAQ,QAAUC,KAAKC,MAAMH,aAAaC,QAAQ,SAAW,CACzFG,SAAU,GACVC,aAAc,EACdC,aAAc,EACdC,yBAAyB,GA6HdC,EA1HK,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAOA,EAAOxD,MACV,KAAKqC,EAED,OADAmB,EAAO1C,KAAK2C,QAAQ,OAAQ,KAAKC,OAC7BF,EAAO1C,MAAwB,MAAhB0C,EAAO1C,MAGtB6C,EADyB,IAA1BJ,EAAML,SAASU,OACN,EAECL,EAAML,SAASK,EAAML,SAASU,OAAO,GAAG/E,GAAG,EACxD0E,EAAMJ,cAAgB,EACtBI,EAAML,SAAN,sBAAqBK,EAAML,UAA3B,CAAqC,CAACrE,GAAI8E,EAAO7C,KAAM0C,EAAO1C,KAAMI,SAAS,EAAOC,QAAQ,KAC5F2B,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IAC5C,eAAWA,IAToCA,EAC/C,IAAII,EASR,KAAKrB,EASD,OARAiB,EAAML,SAASa,SAAQ,SAACC,GAChBA,EAAKnF,KAAO2E,EAAOS,MACnBD,EAAK9C,SAAW8C,EAAK9C,QACrB8C,EAAK9C,QAAUqC,EAAMJ,cAAgB,EAAII,EAAMJ,cAAgB,MAGvEL,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IAE5C,eAAWA,GACf,KAAKhB,EAUD,OATAgB,EAAML,SAASa,SAAQ,SAACC,EAAME,GACtBF,EAAKnF,KAAO2E,EAAOS,MACfD,EAAK9C,UACLqC,EAAMJ,cAAgB,GAE1BI,EAAML,SAASiB,OAAOD,EAAO,OAGrCpB,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IACrC,eAAIA,GACf,KAAKf,EAGD,OAFAe,EAAMH,aAAeI,EAAOS,IAC5BnB,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IACrC,eAAIA,GACf,KAAKd,EACD,IAAI2B,EAAY,WACZb,EAAML,SAASa,SAAQ,SAACC,GACjBA,EAAK9C,SACJmD,QAIRA,EAAc,WACdd,EAAML,SAASa,SAAQ,SAACC,EAAME,GACtBF,EAAK9C,UAELqC,EAAML,SAASiB,OAAOD,EAAO,GAC7BE,SAMZ,OAFAA,IACAtB,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IACrC,eAAIA,GACf,KAAKb,EACD,IAAI4B,EAAa,EAsBjB,OArBAf,EAAML,SAASa,SAAQ,SAACC,GACfA,EAAK9C,UACNoD,GAAY,MAGF,IAAfA,GACCf,EAAMJ,aAAeI,EAAML,SAASU,OAASU,EAC7Cf,EAAML,SAASa,SAAQ,SAACQ,GACpBA,EAAErD,SAAWqD,EAAErD,aAInBqC,EAAMJ,aAAe,EACrBI,EAAML,SAASa,SAAQ,SAACC,GACfA,EAAK9C,UACN8C,EAAK9C,SAAW8C,EAAK9C,aAKjC4B,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IAC5C,eAAUA,GACd,KAAKZ,EAOD,OANAY,EAAML,SAASa,SAAQ,SAACC,GAChBA,EAAKnF,KAAO2E,EAAOS,MACnBD,EAAK7C,QAAU6C,EAAK7C,WAG5B2B,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IAC5C,eAAUA,GACd,KAAKX,EAeD,OAdAY,EAAO1C,KAAK2C,QAAQ,OAAQ,KAAKC,OACjCH,EAAML,SAASa,SAAQ,SAACC,GAChBA,EAAKnF,KAAO2E,EAAOS,MACfT,EAAO1C,MAIPkD,EAAKlD,KAAO0C,EAAO1C,KACnBkD,EAAK7C,QAAS,GAJd6C,EAAK7C,QAAS,MAS1B2B,aAAae,QAAQ,OAAQb,KAAKc,UAAUP,IAC5C,eAAUA,GACd,QACI,OAAOA,I,OCtDJiB,EAjES,SAAC/F,GACrB,IAAM8E,EAAQkB,aAAY,SAAClB,GAAD,OAAWA,EAAMmB,SAErCC,EAAWC,cA4Bb3C,EAAQ,GAwBZ,OAtB0B,IAAvBsB,EAAMH,aACLG,EAAML,SAASa,SAAS,SAAA5B,IACA,IAAjBA,EAAKjB,SACJe,EAAM4C,KAAK,CAAChG,GAAIsD,EAAKtD,GAAIiC,KAAMqB,EAAKrB,KAAMI,QAASiB,EAAKjB,QAASC,OAAQgB,EAAKhB,YAI3D,IAAvBoC,EAAMH,aACVG,EAAML,SAASa,SAAS,SAAA5B,GACjBA,EAAKjB,SACJe,EAAM4C,KAAK,CAAChG,GAAIsD,EAAKtD,GAAIiC,KAAMqB,EAAKrB,KAAMI,QAASiB,EAAKjB,QAASC,OAAQgB,EAAKhB,YAKtFoC,EAAML,SAASa,SAAS,SAAA5B,GAChBF,EAAM4C,KAAK,CAAChG,GAAIsD,EAAKtD,GAAIiC,KAAMqB,EAAKrB,KAAMI,QAASiB,EAAKjB,QAASC,OAAQgB,EAAKhB,YAOtF,sBAAKzC,UAAU,YAAf,UACI,cAAC,EAAD,CAAO2B,SA/BE,SAACS,GACd6D,EDiGiB,SAAC7D,GAAD,MAAU,CAACd,KAAMqC,EAAUvB,QCjGnCgE,CAAUhE,KA8BgBX,YAxCvB,WACZwE,ED+GyB,CAAC3E,KAAM0C,KCxE2B3C,YAAkC,IAArBwD,EAAMJ,aAAmBI,EAAML,SAASU,OAAS,EAAI,UAAY,YACrI,cAAC,EAAD,CAAO3B,MAAOA,EAAOhB,cArDlB,SAACgD,GACRU,EDuHe,SAACV,GAAD,MAAS,CAACjE,KAAMsC,EAAO2B,OCvH7Bc,CAAQd,KAoD8BnC,SAlDlC,SAACmC,GACdU,EDqHoB,SAACV,GAAD,MAAS,CAACjE,KAAMuC,EAAa0B,OCrHxCe,CAAaf,KAiDiDvC,OAtChE,SAACuC,GACRU,ED6Gc,SAACV,GAAD,MAAS,CAACjE,KAAM2C,EAAMsB,OC7G3BgB,CAAOhB,KAqCqE7B,YAnCzE,SAAC6B,EAAKnD,GAClB6D,ED2GmB,SAACV,EAAKnD,GAAN,MAAgB,CAACd,KAAM4C,EAAYqB,MAAKnD,QC3GlDoE,CAAYjB,EAAKnD,OAmCtB,cAAC,EAAD,CAAQ/B,OAAUwE,EAAMJ,aAAcvE,OAAU2E,EAAMH,aAAclE,aAhDzD,SAAC+E,GAChBU,EDmHsB,SAACV,GAAD,MAAS,CAACjE,KAAMwC,EAAeyB,OCnH5CkB,CAAelB,KA+C8E3E,MAAOiE,EAAML,SAASU,SAAWL,EAAMJ,aAAe,EAAI,EAAG5D,YA7CrJ,WACdoF,EDiH6B,CAAC3E,KAAMyC,WE5H7B2C,EARL,WACR,OACE,qBAAK1G,UAAY,UAAjB,SACE,cAAC,EAAD,OCMS2G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCJVQ,EAAWC,YAAgB,CAC3BrB,MAAMpB,IAGN0C,EAAQC,YAAYH,GAExBI,OAAOF,MAAQA,EAEAA,QCHfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BlB,K,kBCnBA/G,EAAOC,QAAU,CAAC,WAAa,0BAA0B,KAAO,oBAAoB,aAAe,8B,kBCAnGD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,WAAa,0BAA0B,gBAAkB,+BAA+B,UAAY,yBAAyB,WAAa,0BAA0B,KAAO,uB","file":"static/js/main.07e95a7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1GMzd\",\"active__count\":\"Filter_active__count__RC6gn\",\"filter__link\":\"Filter_filter__link__3DhEX\",\"active\":\"Filter_active__1VKYr\",\"items\":\"Filter_items__29Mn8\",\"clear__completed\":\"Filter_clear__completed__2N6XS\"};","import s from './Filter.module.scss';\r\n\r\n\r\nlet Filter = (props) =>{\r\n    return(\r\n        <div className={s.filter}>\r\n            <p id={s.active__count}>{props.active} items left</p>\r\n            <p className={`${s.filter__link} ${props.filter === 1 ?  s.active : ''}`} onClick={()=> props.changeFilter(1)}>All</p>\r\n            <p className={`${s.filter__link} ${props.filter === 2 ?  s.active : ''}`} onClick={()=> props.changeFilter(2)}>Active</p>\r\n            <p className={`${s.filter__link} ${props.filter === 3 ?  s.active : ''}`} onClick={()=> props.changeFilter(3)}>Completed</p>\r\n            <p id={s.clear__completed} style={{opacity: props.clear}} onClick={props.clearButton}>Clear completed</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import { useState } from \"react\";\r\nimport s from './Input.module.scss';\r\n\r\nlet Input = (props) =>{\r\n    const[input, setInput] = useState('');\r\n    const handleChange = e => setInput(e.target.value);\r\n    let onSubmitForm = (e) =>{\r\n        e.preventDefault(); \r\n        props.onSubmit(input); \r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <div className={s.form}>\r\n            <div className={s.toggleAllButton}>\r\n                <input style={{color: props.toggleColor}} type=\"button\" id={s.toggleAll}  value=\"❯\" onClick={props.onToggleAll}></input>\r\n            </div>\r\n            <form id={s.todo__form} onSubmit={onSubmitForm}>\r\n                <input type=\"text\" name=\"todo__text\" id={s.todo__text} placeholder=\"What needs to be done?\" value={input} onChange={handleChange}></input>\r\n            </form>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useState } from \"react\";\r\nimport s from './Tasks.module.scss'\r\n\r\n\r\nlet Task = (props) =>{\r\n    let handleApply = e =>{\r\n        if (e.key === 'Enter'){\r\n            props.onApply(props.id, input)\r\n        }\r\n        else if (e.key === \"Escape\"){\r\n            props.onEdit(props.id); setInput(props.text)\r\n        }\r\n    }\r\n    let handleCheck = () =>{\r\n        props.onCheckAction(props.id, props.checked)\r\n    }\r\n    let handleDelete = () =>{\r\n        props.onDelete(props.id, props.checked)\r\n    }\r\n    let handleEdit = () =>{\r\n        props.onEdit(props.id)\r\n    }\r\n    let handleSecApply = () =>{\r\n        props.onApply(props.id, input)\r\n    }\r\n\r\n\r\n    const[input, setInput] = useState(props.text);\r\n    const handleChange = e => setInput(e.target.value);\r\n    return(\r\n        <li id={props.id} className ={s.items}>\r\n            <input type=\"checkbox\" className={s.checkbox} onChange={handleCheck} checked={props.checked ? 'checked' : ''}></input>\r\n            {props.inEdit ? <input className={s.edit} autoFocus onChange={handleChange} onBlur={handleSecApply} onKeyUp={handleApply} value={input}></input> : <label className={s.label} onDoubleClick={handleEdit}>{props.text}</label>}\r\n            <button id={s.todo__remove} onClick={handleDelete}>X</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Task;","import Task from './Task';\r\nimport s from './Tasks.module.scss'\r\n\r\nlet Tasks = (props) =>{\r\n    return(\r\n        <ul id={s.todo__list}>\r\n            {props.todos.map(todo=> <Task key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} inEdit={todo.inEdit} onDelete={props.onDelete} onCheckAction={props.onCheckAction} onApply={props.onApplyEdit} onEdit={props.onEdit}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Tasks","const ADD_TODO = 'ADD-TODO';\r\nconst CHECK = 'CHECK';\r\nconst DELETE_TODO = 'DELETE-TODO';\r\nconst CHANGE_FILTER = 'CHANGE-FILTER';\r\nconst CLEAR_COMPLETED = 'CLEAR-COMPLETED';\r\nconst TOGGLE_ALL = 'TOGGLE-ALL';\r\nconst EDIT = 'EDIT';\r\nconst APPLY_EDIT = 'APPLY-EDIT'\r\n\r\n\r\n\r\nlet initialState = localStorage.getItem('todo') ? JSON.parse(localStorage.getItem('todo')) : {\r\n    todolist: [],\r\n    active_count: 0,\r\n    filter_count: 1,\r\n    clear_completed_opacity: true\r\n}\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            action.text.replace(/\\s+/g, \" \").trim();\r\n            if(!action.text || action.text === \" \") return state;\r\n            let newId\r\n            if(state.todolist.length === 0){\r\n                newId = 1\r\n            }\r\n            else{newId = state.todolist[state.todolist.length-1].id+1;}\r\n            state.active_count += 1\r\n            state.todolist = [...state.todolist, {id: newId, text: action.text, checked: false, inEdit: false}]\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{ ...state};\r\n        case CHECK:\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    item.checked = !item.checked;\r\n                    item.checked ? state.active_count -= 1 : state.active_count += 1\r\n                }\r\n            }) \r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n\r\n            return{ ...state};\r\n        case DELETE_TODO:\r\n            state.todolist.forEach((item, index)=>{\r\n                if (item.id === action.ind){\r\n                    if(!item.checked){\r\n                        state.active_count -= 1\r\n                    }\r\n                    state.todolist.splice(index, 1);\r\n                }\r\n            })\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state};\r\n        case CHANGE_FILTER:\r\n            state.filter_count = action.ind\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state}\r\n        case CLEAR_COMPLETED:\r\n            let checkList = () =>{\r\n                state.todolist.forEach((item)=>{\r\n                    if(item.checked){\r\n                        deleteItems();\r\n                    }\r\n                });\r\n            }\r\n            let deleteItems = () =>{\r\n                state.todolist.forEach((item, index)=>{\r\n                    if (item.checked)\r\n                    {\r\n                        state.todolist.splice(index, 1);\r\n                        checkList();\r\n                    }\r\n                });\r\n            }\r\n            checkList();\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return {...state}\r\n        case TOGGLE_ALL:\r\n            let nonchecked = 0;\r\n            state.todolist.forEach((item)=>{\r\n                if (!item.checked){\r\n                    nonchecked+=1;\r\n                }\r\n            });\r\n            if(nonchecked === 0){\r\n                state.active_count = state.todolist.length - nonchecked;\r\n                state.todolist.forEach((i)=>{\r\n                    i.checked = !i.checked;\r\n                });\r\n            }\r\n            else{\r\n                state.active_count = 0;\r\n                state.todolist.forEach((item)=>{\r\n                    if (!item.checked){\r\n                        item.checked = !item.checked;\r\n                    }\r\n                    \r\n                });\r\n            }\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        case EDIT:\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    item.inEdit = !item.inEdit;\r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        case APPLY_EDIT:\r\n            action.text.replace(/\\s+/g, \" \").trim();\r\n            state.todolist.forEach((item)=>{\r\n                if (item.id === action.ind){\r\n                    if(!action.text ){\r\n                        item.inEdit = false;\r\n                    }\r\n                    else{\r\n                        item.text = action.text;\r\n                        item.inEdit = false;\r\n                    }\r\n                    \r\n                }\r\n            });\r\n            localStorage.setItem('todo', JSON.stringify(state));\r\n            return{...state}\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport const addTodoAC = (text) =>({type: ADD_TODO, text});\r\nexport const checkAC = (ind) =>({type: CHECK, ind});\r\nexport const deleteTodoAC = (ind) =>({type: DELETE_TODO, ind});\r\nexport const changeFilterAC = (ind) =>({type: CHANGE_FILTER, ind});\r\nexport const clearCompleteAC = () =>({type: CLEAR_COMPLETED});\r\nexport const toggleAllAC = () =>({type: TOGGLE_ALL});\r\nexport const editAC = (ind) =>({type: EDIT, ind});\r\nexport const applyEditAC = (ind, text) => ({type: APPLY_EDIT, ind, text});\r\n\r\nexport default taskReducer;","import Filter from \"./view/Filter\";\r\nimport Input from './view/Input';\r\nimport Tasks from './view/tasks/Tasks';\r\nimport { addTodoAC, changeFilterAC, checkAC, deleteTodoAC, clearCompleteAC, toggleAllAC, editAC, applyEditAC } from './../redux/taskReducer';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\nlet TodolistContainer = (props) =>{\r\n    const state = useSelector((state) => state.tasks);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let check =(ind)=>{\r\n        dispatch(checkAC(ind));\r\n    }\r\n    let deleteTodo = (ind) =>{\r\n        dispatch(deleteTodoAC(ind))\r\n    }\r\n    let changeFilter = (ind) =>{\r\n        dispatch(changeFilterAC(ind))\r\n    }\r\n    let clearButton = () =>{\r\n        dispatch(clearCompleteAC())\r\n    }\r\n    let toggleAll = () =>{\r\n        dispatch(toggleAllAC())\r\n    }\r\n    let edit = (ind) =>{\r\n        dispatch(editAC(ind))\r\n    }\r\n    let applyEdit = (ind, text) =>{\r\n        dispatch(applyEditAC(ind, text))\r\n    }\r\n    let submitForm = (text) =>{\r\n        dispatch(addTodoAC(text));\r\n    }\r\n\r\n\r\n    let todos = [];\r\n    \r\n    if(state.filter_count === 2){\r\n        state.todolist.forEach( todo => {\r\n            if(todo.checked === false){\r\n                todos.push({id: todo.id, text: todo.text, checked: todo.checked, inEdit: todo.inEdit})\r\n            }\r\n        })\r\n    }\r\n    else if(state.filter_count === 3){\r\n        state.todolist.forEach( todo => {\r\n            if(todo.checked){\r\n                todos.push({id: todo.id, text: todo.text, checked: todo.checked, inEdit: todo.inEdit})\r\n            }\r\n        })\r\n    }\r\n    else{ \r\n        state.todolist.forEach( todo => {\r\n                todos.push({id: todo.id, text: todo.text, checked: todo.checked, inEdit: todo.inEdit})\r\n        })\r\n     }\r\n     \r\n\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <Input onSubmit = {submitForm} onToggleAll={toggleAll} toggleColor={state.active_count===0 & state.todolist.length > 0 ? '#26de81' : '#778ca3'}/>\r\n            <Tasks todos={todos} onCheckAction={check} onDelete = {deleteTodo} onEdit={edit} onApplyEdit={applyEdit}/>\r\n            <Filter active = {state.active_count} filter = {state.filter_count} changeFilter = {changeFilter} clear={state.todolist.length !== state.active_count ? 1 : 0} clearButton={clearButton}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default TodolistContainer;","import './App.scss';\nimport TodolistContainer from './components/TodolistContainer';\n\nlet App = () => {\n  return(\n    <div className = 'Wrapper'>\n      <TodolistContainer/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers} from \"redux\";\r\nimport taskReducer from './taskReducer';\r\n\r\nlet reducers = combineReducers({\r\n    tasks:taskReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__list\":\"Tasks_todo__list__rZWCT\",\"edit\":\"Tasks_edit__w9vnJ\",\"todo__remove\":\"Tasks_todo__remove__1hDra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__XSsy4\",\"todo__form\":\"Input_todo__form__CGkkh\",\"toggleAllButton\":\"Input_toggleAllButton__1T7lf\",\"toggleAll\":\"Input_toggleAll__T3Rdl\",\"todo__text\":\"Input_todo__text__2rUo2\",\"edit\":\"Input_edit__MLonn\"};"],"sourceRoot":""}